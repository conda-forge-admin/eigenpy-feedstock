diff --git a/CMakeLists.txt b/CMakeLists.txt
index 92be7fa..c8d2974 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -68,7 +68,11 @@ ELSE(WIN32)
   SET(LINK create_symlink)
 ENDIF(WIN32)
 
-set(PYTHON_COMPONENTS Interpreter Development.Module NumPy)
+if(CMAKE_CROSSCOMPILING)
+  set(PYTHON_COMPONENTS Interpreter NumPy)
+else()
+  set(PYTHON_COMPONENTS Interpreter Development.Module NumPy)
+endif()
 FINDPYTHON()
 
 IF(WIN32)
Submodule cmake contains modified content
Submodule cmake 9d20c6f..33032a0:
diff --git a/cmake/pkg-config.cmake b/cmake/pkg-config.cmake
index 8aeeef7..fc18ed6 100644
--- a/cmake/pkg-config.cmake
+++ b/cmake/pkg-config.cmake
@@ -52,16 +52,16 @@ SET(PKG_CONFIG_ADDITIONAL_VARIABLES bindir pkglibdir datarootdir pkgdatarootdir
 #
 MACRO(_SETUP_PROJECT_PKG_CONFIG)
   # Pkg-config related commands.
-  SET(_PKG_CONFIG_PREFIX "${CMAKE_INSTALL_PREFIX}" CACHE INTERNAL "")
+  SET(_PKG_CONFIG_PREFIX "\${pcfiledir}/../.." CACHE INTERNAL "")
   SET(_PKG_CONFIG_EXEC_PREFIX "${_PKG_CONFIG_PREFIX}" CACHE INTERNAL "")
-  SET(_PKG_CONFIG_LIBDIR "${CMAKE_INSTALL_FULL_LIBDIR}" CACHE INTERNAL "")
-  SET(_PKG_CONFIG_BINDIR "${CMAKE_INSTALL_FULL_BINDIR}" CACHE INTERNAL "")
-  SET(_PKG_CONFIG_PKGLIBDIR "${CMAKE_INSTALL_FULL_PKGLIBDIR}" CACHE INTERNAL "")
-  SET(_PKG_CONFIG_INCLUDEDIR "${CMAKE_INSTALL_FULL_INCLUDEDIR}" CACHE INTERNAL "")
-  SET(_PKG_CONFIG_DATAROOTDIR "${CMAKE_INSTALL_FULL_DATAROOTDIR}" CACHE INTERNAL "")
-  SET(_PKG_CONFIG_PKGDATAROOTDIR "${CMAKE_INSTALL_FULL_DATADIR}" CACHE INTERNAL "")
+  SET(_PKG_CONFIG_LIBDIR "${_PKG_CONFIG_PREFIX}/${CMAKE_INSTALL_LIBDIR}" CACHE INTERNAL "")
+  SET(_PKG_CONFIG_BINDIR "${_PKG_CONFIG_PREFIX}/${CMAKE_INSTALL_BINDIR}" CACHE INTERNAL "")
+  SET(_PKG_CONFIG_PKGLIBDIR "${_PKG_CONFIG_PREFIX}/${CMAKE_INSTALL_PKGLIBDIR}" CACHE INTERNAL "")
+  SET(_PKG_CONFIG_INCLUDEDIR "${_PKG_CONFIG_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}" CACHE INTERNAL "")
+  SET(_PKG_CONFIG_DATAROOTDIR "${_PKG_CONFIG_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}" CACHE INTERNAL "")
+  SET(_PKG_CONFIG_PKGDATAROOTDIR "${_PKG_CONFIG_PREFIX}/${CMAKE_INSTALL_DATADIR}" CACHE INTERNAL "")
   IF(INSTALL_DOCUMENTATION)
-    SET(_PKG_CONFIG_DOCDIR "${CMAKE_INSTALL_FULL_DOCDIR}" CACHE INTERNAL "")
+    SET(_PKG_CONFIG_DOCDIR "${_PKG_CONFIG_PREFIX}/${CMAKE_INSTALL_DOCDIR}" CACHE INTERNAL "")
     SET(_PKG_CONFIG_DOXYGENDOCDIR "${_PKG_CONFIG_DOCDIR}/doxygen-html" CACHE INTERNAL "")
   ELSE(INSTALL_DOCUMENTATION)
     SET(_PKG_CONFIG_DOCDIR "" CACHE INTERNAL "")
diff --git a/cmake/python.cmake b/cmake/python.cmake
index 3bfaaf3..032bc7b 100644
--- a/cmake/python.cmake
+++ b/cmake/python.cmake
@@ -66,6 +66,12 @@ MACRO(FINDPYTHON)
   IF(NOT PYTHON_COMPONENTS)
     SET(PYTHON_COMPONENTS Interpreter Development)
   ENDIF()
+
+  LIST(FIND PYTHON_COMPONENTS "NumPy" _npindex)
+  IF(NOT ${_npindex} EQUAL -1)
+    SET(SEARCH_FOR_NUMPY TRUE)
+  ENDIF()
+
   IF(CMAKE_VERSION VERSION_LESS "3.18")
     #IF("Development.Module" IN_LIST PYTHON_COMPONENTS) -- require CMake 3.3
     LIST(FIND PYTHON_COMPONENTS "Development.Module" _index)
@@ -75,15 +81,15 @@ MACRO(FINDPYTHON)
       SET(PYTHON_COMPONENTS ${PYTHON_COMPONENTS} Development)
     ENDIF()
     IF(CMAKE_VERSION VERSION_LESS "3.14")
-      #IF("NumPy" IN_LIST PYTHON_COMPONENTS) -- require CMake 3.3
-      LIST(FIND PYTHON_COMPONENTS "NumPy" _npindex)
-      IF(NOT ${_npindex} EQUAL -1)
+      IF(SEARCH_FOR_NUMPY)
         MESSAGE(STATUS "For CMake < 3.14, NumPy is not available. Falling back to custom FIND_NUMPY()")
         LIST(REMOVE_ITEM PYTHON_COMPONENTS NumPy)
       ENDIF()
     ENDIF()
   ENDIF()
-  IF(NOT CMAKE_VERSION VERSION_LESS "3.12" AND NOT WIN32)
+
+
+  IF(NOT CMAKE_VERSION VERSION_LESS "3.12")
 
     IF(DEFINED PYTHON_EXECUTABLE OR DEFINED Python_EXECUTABLE)
       IF(NOT DEFINED Python_EXCUTABLE)
@@ -110,6 +116,17 @@ MACRO(FINDPYTHON)
         ERROR_STRIP_TRAILING_WHITESPACE
         )
 
+      # Provide some hints according to the current PYTHON_EXECUTABLE
+      if(NOT DEFINED PYTHON_INCLUDE_DIR)
+        EXECUTE_PROCESS(
+          COMMAND "${PYTHON_EXECUTABLE}" "-c"
+          "import distutils.sysconfig as sysconfig; print(sysconfig.get_python_inc())"
+          OUTPUT_VARIABLE PYTHON_INCLUDE_DIR
+          ERROR_QUIET)
+        STRING(STRIP "${PYTHON_INCLUDE_DIR}" PYTHON_INCLUDE_DIR)
+        FILE(TO_CMAKE_PATH "${PYTHON_INCLUDE_DIR}" PYTHON_INCLUDE_DIR)
+      endif()
+
       IF(NOT "${_PYTHON_VERSION_RESULT_VARIABLE}" STREQUAL "0")
         MESSAGE(FATAL_ERROR "${PYTHON_EXECUTABLE} --version did not succeed.")
       ENDIF(NOT "${_PYTHON_VERSION_RESULT_VARIABLE}" STREQUAL "0")
@@ -120,10 +137,11 @@ MACRO(FINDPYTHON)
       # Hint for finding the right Python version
       SET(Python_EXECUTABLE ${PYTHON_EXECUTABLE})
       SET(Python${_PYTHON_VERSION_MAJOR}_EXECUTABLE ${PYTHON_EXECUTABLE})
+      SET(Python${_PYTHON_VERSION_MAJOR}_INCLUDE_DIR ${PYTHON_INCLUDE_DIR})
 
       FIND_PACKAGE("Python${_PYTHON_VERSION_MAJOR}" REQUIRED COMPONENTS ${PYTHON_COMPONENTS})
     ELSE()
-      # No hind was provided. We can then check for first Python 2, then Python 3
+      # No hint was provided. We can then check for first Python 2, then Python 3
       FIND_PACKAGE(Python2 QUIET COMPONENTS ${PYTHON_COMPONENTS})
       IF(NOT Python2_FOUND)
         FIND_PACKAGE(Python3 QUIET COMPONENTS ${PYTHON_COMPONENTS})
@@ -156,7 +174,13 @@ MACRO(FINDPYTHON)
       MESSAGE(FATAL_ERROR "Python executable has not been found.")
     ENDIF()
 
-  ELSE(NOT CMAKE_VERSION VERSION_LESS "3.12" AND NOT WIN32)
+    IF(SEARCH_FOR_NUMPY)
+      SET(NUMPY_INCLUDE_DIRS "${Python${_PYTHON_VERSION_MAJOR}_NumPy_INCLUDE_DIRS}")
+      string(REPLACE "\\" "/" NUMPY_INCLUDE_DIRS "${NUMPY_INCLUDE_DIRS}") 
+      FILE(TO_CMAKE_PATH "${NUMPY_INCLUDE_DIRS}" NUMPY_INCLUDE_DIRS)
+    ENDIF()
+
+  ELSE(NOT CMAKE_VERSION VERSION_LESS "3.12")
 
     FIND_PACKAGE(PythonInterp ${ARGN})
     IF (NOT ${PYTHONINTERP_FOUND} STREQUAL TRUE)
@@ -165,7 +189,7 @@ MACRO(FINDPYTHON)
     MESSAGE(STATUS "PythonInterp: ${PYTHON_EXECUTABLE}")
 
     # Set PYTHON_INCLUDE_DIR variables if it is not defined by the user
-    IF(DEFINED PYTHON_EXECUTABLE AND NOT WIN32)
+    IF(DEFINED PYTHON_EXECUTABLE)
       # Retrieve the corresponding value of PYTHON_INCLUDE_DIR if it is not defined
       IF(NOT DEFINED PYTHON_INCLUDE_DIR)
         EXECUTE_PROCESS(
@@ -176,10 +200,10 @@ MACRO(FINDPYTHON)
         STRING(STRIP "${PYTHON_INCLUDE_DIR}" PYTHON_INCLUDE_DIR)
       ENDIF(NOT DEFINED PYTHON_INCLUDE_DIR)
       SET(PYTHON_INCLUDE_DIRS ${PYTHON_INCLUDE_DIR})
-    ENDIF(DEFINED PYTHON_EXECUTABLE AND NOT WIN32)
 
-    MESSAGE(STATUS "PYTHON_INCLUDE_DIRS:${PYTHON_INCLUDE_DIRS}")
-    MESSAGE(STATUS "PYTHON_INCLUDE_DIR:${PYTHON_INCLUDE_DIR}")
+      MESSAGE(STATUS "PYTHON_INCLUDE_DIRS:${PYTHON_INCLUDE_DIRS}")
+      MESSAGE(STATUS "PYTHON_INCLUDE_DIR:${PYTHON_INCLUDE_DIR}")
+    ENDIF(DEFINED PYTHON_EXECUTABLE)
 
     # Inform PythonLibs of the required version of PythonInterp
     SET(PYTHONLIBS_VERSION_STRING ${PYTHON_VERSION_STRING})
@@ -200,7 +224,7 @@ MACRO(FINDPYTHON)
     ENDIF (NOT ${PYTHON_VERSION_MAJOR} EQUAL ${PYTHONLIBS_VERSION_MAJOR} OR
            NOT ${PYTHON_VERSION_MINOR} EQUAL ${PYTHONLIBS_VERSION_MINOR})
 
-  ENDIF(NOT CMAKE_VERSION VERSION_LESS "3.12" AND NOT WIN32)
+  ENDIF(NOT CMAKE_VERSION VERSION_LESS "3.12")
 
   # Find PYTHON_LIBRARY_DIRS
   GET_FILENAME_COMPONENT(PYTHON_LIBRARY_DIRS "${PYTHON_LIBRARIES}" PATH)
@@ -272,13 +296,16 @@ MACRO(FINDPYTHON)
 
   # Call FIND_NUMPY if necessary
   IF(CMAKE_VERSION VERSION_LESS "3.14")
-    #IF("NumPy" IN_LIST PYTHON_COMPONENTS) -- require CMake 3.3
-    LIST(FIND PYTHON_COMPONENTS "NumPy" _npindex)
-    IF(NOT ${_npindex} EQUAL -1)
+    IF(SEARCH_FOR_NUMPY)
       FIND_NUMPY()
     ENDIF()
   ENDIF()
 
+  IF(SEARCH_FOR_NUMPY)
+    MESSAGE(STATUS "NumPy include dir: ${NUMPY_INCLUDE_DIRS}") 
+    LIST(APPEND NUMPY_INCLUDE_DIRS)
+  ENDIF()
+
   # Log Python variables
   LIST(APPEND LOGGING_WATCHED_VARIABLES
     PYTHONINTERP_FOUND
